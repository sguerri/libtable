name: Build

on:
  push:
    tags: ['v[0-9].[0-9]+.[0-9]+']

env:
  APP_NAME: libtable
  APP_VERSION: "0.3.1"
  BUILD_TYPE: Release

jobs:

  build-python:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout current version
        uses: actions/checkout@v2

      - name: Install python dependencies
        run: |
          python3 -m pip install build

      - name: Build python
        run: |
          python3 -m build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  release:
    runs-on: ubuntu-20.04
    needs: [ 'build-python' ]

    steps:
      - name: Checkout current version
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Move all files
        run: |
          mkdir ./dist && \
          find . -mindepth 2 -type f -print -exec mv {} ./dist \;
        working-directory: artifacts

      - name: Release
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: artifacts/dist/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# TODO remove all artifacts


#  cleanup_job:
#    needs: [ publish ]
#    if: always()
#    runs-on: ubuntu-latest
#    steps:
#    - name: call webhook to delete artifacts
#      env:
#        FOR_WEBHOOKS_SECRET: ${{ secrets.FOR_WEBHOOKS_SECRET }}
#      run: |
#        echo "::add-mask::$FOR_WEBHOOKS_SECRET"
#        curl --verbose --fail --show-error --location --request POST "https://api.github.com/repos/$GITHUB_REPOSITORY/dispatches" --header "Authorization: token $FOR_WEBHOOKS_SECRET" --header 'Content-Type: application/json' --header 'Accept: application/vnd.github.everest-preview+json' --data-raw "{ \"event_type\": \"delete_all_artifacts\", \"client_payload\": {\"parent_runid\": \"$GITHUB_RUN_ID\", \"parent_repo\": \"$GITHUB_REPOSITORY\"} }"

#      - name: Pushes to PPA
#        run: |
#          git config --global user.email "${{ env.PPA_EMAIL }}" && \
#          git config --global user.name "${{ env.PPA_USER }}" && \
#          git clone --single-branch --branch master "https://x-access-token:${{ secrets.PUBLISH_PPA }}@github.com/${{ env.PPA_REPO }}.git" published && \
#          cp "${{ env.APP_NAME }}_${{ env.APP_VERSION }}_amd64_${{ matrix.config.name }}.deb" "published/dists/${{ matrix.config.name }}/${{ env.APP_NAME }}_${{ env.APP_VERSION }}_amd64.deb" && \
#          cd published && \
#          git add . && \
#          git commit -m "[${{ matrix.config.name }}] Add ${{ env.APP_NAME }}_${{ env.APP_VERSION }}_amd64.deb" && \
#          git pull --no-edit && \
#          git push -u origin master
